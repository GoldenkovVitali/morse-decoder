const MORSE_TABLE = {
  ".-": "a",
  "-...": "b",
  "-.-.": "c",
  "-..": "d",
  ".": "e",
  "..-.": "f",
  "--.": "g",
  "....": "h",
  "..": "i",
  ".---": "j",
  "-.-": "k",
  ".-..": "l",
  "--": "m",
  "-.": "n",
  "---": "o",
  ".--.": "p",
  "--.-": "q",
  ".-.": "r",
  "...": "s",
  "-": "t",
  "..-": "u",
  "...-": "v",
  ".--": "w",
  "-..-": "x",
  "-.--": "y",
  "--..": "z",
  ".----": "1",
  "..---": "2",
  "...--": "3",
  "....-": "4",
  ".....": "5",
  "-....": "6",
  "--...": "7",
  "---..": "8",
  "----.": "9",
  "-----": "0"
};

function decode(expr) {
  let newexpr = expr.match(/[\d \*]{10}/g); // возвращаем получившиеся совпадения при сопоставлении строки с регулярным выражением \d -цифры, \* - пробелы /g-глобальный поиск(разделит на массив строк по 10 цифр)
  console.log(newexpr);
  let q = "";
  for (let i = 0; i < newexpr.length; i++) {
    newexpr[i] = newexpr[i].replace(/00/g, "").replace(/10/g, ".").replace(/11/g, "-").replace(/\*\*\*\*\*\*\*\*\*\*/g, " "); // переводим каждую часть массива в .-' ' (при помощи replace)
    console.log(newexpr[i]);
    for (q in MORSE_TABLE) {// для ключа (элемента) q в объекте MORSE_TABLE проводим проверку
      if (q == newexpr[i]) {// если какой-либо элемент из MORSE_TABLE (.-) совпадает с элементом newexpr[i]
        newexpr[i] = MORSE_TABLE[q];// то мы ему присваиваем значение этого элемента (букву, цифру)
        console.log(newexpr[i]);
      }
    }
  }
  return newexpr.join(""); // возвращаем из массива элементов строку
}

module.exports = {
  decode
};
